/**
 * Simple @font-face mixin
 * http://kouto-swiss.io/docs.html#font-face
 **/
font-face( name, font-src, weight = false, style = false, formats = local eot woff2 woff truetype svg, svg-font-name = false, local-font-name = false )
  @font-face
    font-family name
    if weight
      font-weight weight
    if style
      font-style style
    fonts = ()
    if local in formats
      local-name = local-font-name ? local-font-name : name
      push(fonts, 'local("' + local-name + '")')
    if eot in formats
      src: url( font-src + ".eot" )
      push( fonts, 'url("' + font-src + '.eot?#iefix") format("embedded-opentype")' )
    if woff2 in formats
      push( fonts, 'url("' + font-src + '.woff2") format("woff2")' )
    if woff in formats
      push( fonts, 'url("' + font-src + '.woff") format("woff")' )
    if opentype in formats || otf in formats
      push( fonts, 'url("' + font-src + '.otf") format("opentype")' )
    if truetype in formats || ttf in formats
      push( fonts, 'url("' + font-src + '.ttf") format("truetype")' )
    if svg in formats
      svg-name = svg-font-name ? svg-font-name : name
      push( fonts, 'url("' + font-src + '.svg#' + svg-name + '") format("svg")' )
    src unquote( join( ", ", fonts ) )

/**
 * Convert pixels to rem. Assumes 1rem = 16px
 * http://kouto-swiss.io/docs.html#rem
 */
rem( values )
  base = $font-size-base is a "unit" ? $font-size-base : 16
  result = null

  for value in values
    if type( value ) == "unit" && ( unit( value ) == "px" || unit( value ) == "" )
      value = unit( round(value / base, 3 ), "rem" )
      if value == "0rem" { value = 0 }

    result = result != null ? result value : value
  result

/**
 * Shortcut for width and height properties
 * http://kouto-swiss.io/docs.html#size
 **/
size( values... )
  if length( values ) == 1
    width: values[ 0 ] || auto
    height: values[ 0 ] || auto
  else
    width: values[ 0 ] if values[ 0 ] != false
    height: values[ 1 ] if values[ 1 ] != false


btn( customColor, baseColor )
  border 0
  background none
  color baseColor
  size rem(64px)
  border-radius 50%
  cursor pointer
  outline 0
  transition .3s ease-in-out
  backface-visibility hidden
  position relative
  text-align center
  fill baseColor

  span
    position absolute
    left 50%
    bottom 0
    word-wrap none
    display inline-block
    text-align center
    color $color-text
    transition .3s ease-in-out
    opacity 0
    transform translate(-50%, 90%) scale(.5)
    z-index -1
    text-transform lowercase
    font-size 1.25em
    white-space nowrap

  .icon
    size 60%
    position relative

  &::before
    content ""
    position absolute
    top 0
    left 0
    right 0
    bottom 0
    border-radius inherit
    z-index -1
    box-shadow inset 0 0 0 35px customColor
    transform scale3d(.9, .9, 1)
    transition .3s ease-in-out

  &:hover
    color customColor
    fill customColor

    span
      opacity 1
      transform translate(-50%, 110%) scale(1)

    &::before
      box-shadow inset 0 0 0 2px customColor
      transform scale3d(1, 1, 1)
